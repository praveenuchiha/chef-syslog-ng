#
## This file is managed by Chef.
## Do NOT modify this file directly.
#

@version:<%= node['syslogng']['installed_version'] %>

@include "scl.conf"

# syslog-ng configuration file.
#
# This should behave pretty much like the original syslog on RedHat. But
# it could be configured a lot smarter.
#
# See syslog-ng(8) and syslog-ng.conf(5) for more information.
#

options {
    flush_lines (<%=node['syslogng']['options']['flush_lines'] -%>);
    time_reopen (<%=node['syslogng']['options']['time_reopen'] -%>);
    log_fifo_size (<%=node['syslogng']['options']['log_fifo_size'] -%>);
    long_hostnames (<%=node['syslogng']['options']['long_hostnames'] -%>);
    use_dns (<%=node['syslogng']['options']['use_dns'] -%>);
    use_fqdn (<%=node['syslogng']['options']['use_fqdn'] -%>);
    create_dirs (<%=node['syslogng']['options']['create_dirs'] -%>);
    keep_hostname (<%=node['syslogng']['options']['keep_hostname'] -%>);
#    so_keepalive (<%=node['syslogng']['options']['so_keepalive'] -%>);
    normalize_hostnames (<%=node['syslogng']['options']['normalize_hostnames'] -%>);
    owner (<%=node['syslogng']['options']['owner'] -%>);
    group (<%=node['syslogng']['options']['group'] -%>);
    perm (<%=node['syslogng']['options']['perm'] -%>);
    stats_freq (<%=node['syslogng']['options']['stats_freq'] -%>);
};

source s_sys {
    file ("/proc/kmsg" program_override("kernel: "));
    unix-stream ("/dev/log");
    internal();
};

# Default  Destination
destination d_cons { file("/dev/console"); };
destination d_mesg { file("/var/log/messages"); };
destination d_auth { file("/var/log/secure"); };
destination d_mail { file("/var/log/maillog" flush_lines(10)); };
destination d_spol { file("/var/log/spooler"); };
destination d_boot { file("/var/log/boot.log"); };
destination d_cron { file("/var/log/cron"); };
destination d_kern { file("/var/log/kern"); };
destination d_mlal { usertty("*"); };

# Default Filter
filter f_kernel     { facility(kern); };
filter f_default    { level(info..emerg) and
                        not (facility(mail)
                        or facility(authpriv)
                        or facility(cron)); };
filter f_auth       { facility(authpriv); };
filter f_mail       { facility(mail); };
filter f_emergency  { level(emerg); };
filter f_news       { facility(uucp) or
                        (facility(news)
                        and level(crit..emerg)); };
filter f_boot   { facility(local7); };
filter f_cron   { facility(cron); };

#log { source(s_sys); filter(f_kernel); destination(d_cons); };
log { source(s_sys); filter(f_kernel); destination(d_kern); };
log { source(s_sys); filter(f_default); destination(d_mesg); };
log { source(s_sys); filter(f_auth); destination(d_auth); };
log { source(s_sys); filter(f_mail); destination(d_mail); };
log { source(s_sys); filter(f_emergency); destination(d_mlal); };
log { source(s_sys); filter(f_news); destination(d_spol); };
log { source(s_sys); filter(f_boot); destination(d_boot); };
log { source(s_sys); filter(f_cron); destination(d_cron); };

@include "<%=node['syslogng']['include_dir']-%>/"

# vim:ft=syslog-ng:ai:si:ts=4:sw=4:et:
